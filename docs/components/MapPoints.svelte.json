{"main":{"slug":"MapPoints.svelte","contents":"<!--\n  @component\n  Generates canvas dots onto a map using [d3-geo](https://github.com/d3/d3-geo).\n -->\n<script>\n  import { getContext } from 'svelte';\n\n  const { data, width, height } = getContext('LayerCake');\n\n  /* --------------------------------------------\n   * Require a D3 projection function\n   */\n  /** @type {Function} projection - A D3 projection function. Pass this in as an uncalled function, e.g. `projection={geoAlbersUsa}`. */\n  export let projection;\n\n  /** @type {number} [r=3.5] - The point's radius. */\n  export let r = 3.5;\n\n  /** @type {string} [fill='yellow'] - The point's fill color. */\n  export let fill = 'yellow';\n\n  /** @type {string} [stroke='#000'] - The point's stroke color. */\n  export let stroke = '#000';\n\n  /** @type {number} [strokeWidth=1] - The point's stroke width. */\n  export let strokeWidth = 1;\n\n  /** @type {number} [opacity=1] - The point's opacity. */\n  export let opacity = 1;\n\n  /** @type {Array<Object>|undefined} [features] - A list of GeoJSON features to plot. If unset, the plotted features will defaults to those in `$data.features`, assuming this field a list of GeoJSON features. */\n  export let features = undefined;\n\n  $: projectionFn = projection().fitSize([$width, $height], $data);\n</script>\n\n<g class=\"points\">\n  {#each features || $data.features as d}\n    <!-- To scale the circle by size, set r to `$rGet(d.properties)` -->\n    <circle\n      cx={projectionFn(d.geometry.coordinates)[0]}\n      cy={projectionFn(d.geometry.coordinates)[1]}\n      {r}\n      {fill}\n      {stroke}\n      stroke-width={strokeWidth}\n      {opacity}\n    />\n  {/each}\n</g>"},"dek":"","usedIn":[{"group":"Regular","matches":[]},{"group":"SSR","matches":[]}],"hasjsDoctable":true,"jsdocParsed":[{"kind":"type","type":"Function","name":"projection","required":true,"defaultValue":null,"description":"A D3 projection function. Pass this in as an uncalled function, e.g. `projection={geoAlbersUsa}`."},{"kind":"type","type":"number","name":"r","required":false,"defaultValue":"3.5","description":"The point's radius."},{"kind":"type","type":"string","name":"fill","required":false,"defaultValue":"'yellow'","description":"The point's fill color."},{"kind":"type","type":"string","name":"stroke","required":false,"defaultValue":"'#000'","description":"The point's stroke color."},{"kind":"type","type":"number","name":"strokeWidth","required":false,"defaultValue":"1","description":"The point's stroke width."},{"kind":"type","type":"number","name":"opacity","required":false,"defaultValue":"1","description":"The point's opacity."},{"kind":"type","type":"Array<Object>|undefined","name":"features","required":false,"defaultValue":null,"description":"A list of GeoJSON features to plot. If unset, the plotted features will defaults to those in `$data.features`, assuming this field a list of GeoJSON features."}],"componentDescription":"\n  Generates canvas dots onto a map using [d3-geo](https://github.com/d3/d3-geo).\n \n","modules":[]}