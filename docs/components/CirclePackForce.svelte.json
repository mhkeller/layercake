{"main":{"slug":"CirclePackForce.svelte","contents":"<!--\n  @component\n  Generates an SVG force simulation using [d3-force](https://github.com/d3/d3-force). The values here are defaults which you will likely have to customize because every force simulation is different. This technique comes from @plmrry.\n -->\n<script>\n  import { getContext } from 'svelte';\n  import { forceSimulation, forceX, forceManyBody, forceCollide, forceCenter } from 'd3-force';\n\n  const { data, width, height, xScale, xGet, rGet, zGet } = getContext('LayerCake');\n\n  /** @type {Number} [manyBodyStrength=5] - The value passed into the `.strength` method on `forceManyBody`, which is used as the `'charge'` property on the simulation. See [the documentation](https://github.com/d3/d3-force#manyBody_strength) for more. */\n  export let manyBodyStrength = 5;\n\n  /** @type {Number} [xStrength=0.1] - The value passed into the `.strength` method on `forceX`, which is used as the `'x'` property on the simulation. See [the documentation](https://github.com/d3/d3-force#x_strength) for more. */\n  export let xStrength = 0.1;\n\n  /** @type {String|undefined} [nodeColor] Set a color manually otherwise it will default to the `zScale`. */\n  export let nodeColor = undefined;\n\n  /** @type {String} [nodeStroke='#fff'] - The circle's stroke color. */\n  export let nodeStroke = '#fff';\n\n  /** @type {Number} [nodeStrokeWidth=1] - The circle's stroke width, in pixels. */\n  export let nodeStrokeWidth = 1;\n\n  /** @type {Boolean} [groupBy=true] - Group the nodes by the return value of the x-scale. If `false`, align all the nodes to the canvas center. */\n  export let groupBy = true;\n\n  /* --------------------------------------------\n   * Make a copy because the simulation will alter the objects\n   */\n  const initialNodes = $data.map(d => ({ ...d }));\n\n  const simulation = forceSimulation(initialNodes);\n\n  let nodes = [];\n\n  simulation.on('tick', () => {\n    nodes = simulation.nodes();\n  });\n\n  /* ----------------------------------------------\n   * When variables change, set forces and restart the simulation\n   */\n  $: {\n    simulation\n      .force(\n        'x',\n        forceX()\n          .x(d => {\n            return groupBy === true ? $xGet(d) + $xScale.bandwidth() / 2 : $width / 2;\n          })\n          .strength(xStrength)\n      )\n      .force('center', forceCenter($width / 2, $height / 2))\n      .force('charge', forceManyBody().strength(manyBodyStrength))\n      .force(\n        'collision',\n        forceCollide().radius(d => {\n          return $rGet(d) + nodeStrokeWidth / 2; // Divide this by two because an svg stroke is drawn halfway out\n        })\n      )\n      .force('center', forceCenter($width / 2, $height / 2))\n      .alpha(1)\n      .restart();\n  }\n</script>\n\n{#each nodes as point}\n  <circle\n    class=\"node\"\n    r={$rGet(point)}\n    fill={nodeColor || $zGet(point)}\n    stroke={nodeStroke}\n    stroke-width={nodeStrokeWidth}\n    cx={point.x}\n    cy={point.y}\n  >\n    <!-- <title>{point[$custom.title]}</title> -->\n  </circle>\n{/each}"},"dek":"","usedIn":[{"group":"Regular","matches":["/example/CirclePackForce"]},{"group":"SSR","matches":[]}],"hasjsDoctable":true,"jsdocParsed":{"description":"","tags":[{"title":"param","description":"The value passed into the `.strength` method on `forceManyBody`, which is used as the `'charge'` property on the simulation. See [the documentation](https://github.com/d3/d3-force#manyBody_strength) for more.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Number"}},"name":"manyBodyStrength","default":"5"},{"title":"param","description":"The value passed into the `.strength` method on `forceX`, which is used as the `'x'` property on the simulation. See [the documentation](https://github.com/d3/d3-force#x_strength) for more.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Number"}},"name":"xStrength","default":"0.1"},{"title":"param","description":"Set a color manually otherwise it will default to the `zScale`.","type":{"type":"OptionalType","expression":{"type":"UnionType","elements":[{"type":"NameExpression","name":"String"},{"type":"UndefinedLiteral"}]}},"name":"nodeColor"},{"title":"param","description":"The circle's stroke color.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"String"}},"name":"nodeStroke","default":"'#fff'"},{"title":"param","description":"The circle's stroke width, in pixels.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Number"}},"name":"nodeStrokeWidth","default":"1"},{"title":"param","description":"Group the nodes by the return value of the x-scale. If `false`, align all the nodes to the canvas center.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Boolean"}},"name":"groupBy","default":"true"}]},"componentDescription":"Generates an SVG force simulation using [d3-force](https://github.com/d3/d3-force). The values here are defaults which you will likely have to customize because every force simulation is different. This technique comes from @plmrry.","modules":[]}