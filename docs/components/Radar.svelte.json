{"main":{"slug":"Radar.svelte","contents":"<!--\n  @component\n  Generates an SVG radar chart.\n -->\n<script>\n  import { getContext } from 'svelte';\n  import { line, curveCardinalClosed } from 'd3-shape';\n\n  const { data, width, height, xGet, config } = getContext('LayerCake');\n\n  /**  @type {String} [fill='#f0c'] The radar's fill color. This is technically optional because it comes with a default value but you'll likely want to replace it with your own color. */\n  export let fill = '#f0c';\n\n  /**  @type {String} [stroke='#f0c'] The radar's stroke color. This is technically optional because it comes with a default value but you'll likely want to replace it with your own color. */\n  export let stroke = '#f0c';\n\n  /**  @type {Number} [stroke=2] The radar's stroke color. */\n  export let strokeWidth = 2;\n\n  /**  @type {Number} [fillOpacity=0.5] The radar's fill opacity. */\n  export let fillOpacity = 0.5;\n\n  /**  @type {Number} [r=4.5] Each circle's radius. */\n  export let r = 4.5;\n\n  /**  @type {String} [circleFill=\"#f0c\"] Each circle's fill color. This is technically optional because it comes with a default value but you'll likely want to replace it with your own color. */\n  export let circleFill = '#f0c';\n\n  /**  @type {String} [circleStroke=\"#fff\"] Each circle's stroke color. This is technically optional because it comes with a default value but you'll likely want to replace it with your own color. */\n  export let circleStroke = '#fff';\n\n  /**  @type {Number} [circleStrokeWidth=1] Each circle's stroke width. */\n  export let circleStrokeWidth = 1;\n\n  $: angleSlice = (Math.PI * 2) / $config.x.length;\n\n  $: path = line()\n    .curve(curveCardinalClosed)\n    .x((d, i) => d * Math.cos(angleSlice * i - Math.PI / 2))\n    .y((d, i) => d * Math.sin(angleSlice * i - Math.PI / 2));\n\n  /* The non-D3 line generator way. */\n  // $: path = valus => 'M' + values\n  //   .map(d => {\n  //     return $rGet(d).map((val, i) => {\n  //       return [\n  //         val * Math.cos(angleSlice * i - Math.PI / 2),\n  //         val * Math.sin(angleSlice * i - Math.PI / 2)\n  //       ].join(',');\n  //     });\n  //   })\n  //   .join('L') + 'z';\n</script>\n\n<g transform=\"translate({$width / 2}, {$height / 2})\">\n  {#each $data as row}\n    {@const xVals = $xGet(row)}\n    <!-- Draw a line connecting all the dots -->\n    <path\n      class=\"path-line\"\n      d={path(xVals)}\n      {stroke}\n      stroke-width={strokeWidth}\n      {fill}\n      fill-opacity={fillOpacity}\n    ></path>\n\n    <!-- Plot each dots -->\n    {#each xVals as circleR, i}\n      {@const thisAngleSlice = angleSlice * i - Math.PI / 2}\n      <circle\n        cx={circleR * Math.cos(thisAngleSlice)}\n        cy={circleR * Math.sin(thisAngleSlice)}\n        {r}\n        fill={circleFill}\n        stroke={circleStroke}\n        stroke-width={circleStrokeWidth}\n      ></circle>\n    {/each}\n  {/each}\n</g>\n\n<style>\n  .path-line {\n    stroke-linejoin: round;\n    stroke-linecap: round;\n  }\n</style>"},"dek":"","usedIn":[{"group":"Regular","matches":["/example/Radar"]},{"group":"SSR","matches":[]}],"hasjsDoctable":true,"jsdocParsed":{"description":"","tags":[{"title":"param","description":"The radar's fill color. This is technically optional because it comes with a default value but you'll likely want to replace it with your own color.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"String"}},"name":"fill","default":"'#f0c'"},{"title":"param","description":"The radar's stroke color. This is technically optional because it comes with a default value but you'll likely want to replace it with your own color.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"String"}},"name":"stroke","default":"'#f0c'"},{"title":"param","description":"The radar's stroke color.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Number"}},"name":"stroke","default":"2"},{"title":"param","description":"The radar's fill opacity.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Number"}},"name":"fillOpacity","default":"0.5"},{"title":"param","description":"Each circle's radius.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Number"}},"name":"r","default":"4.5"},{"title":"param","description":"Each circle's fill color. This is technically optional because it comes with a default value but you'll likely want to replace it with your own color.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"String"}},"name":"circleFill","default":"\"#f0c\""},{"title":"param","description":"Each circle's stroke color. This is technically optional because it comes with a default value but you'll likely want to replace it with your own color.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"String"}},"name":"circleStroke","default":"\"#fff\""},{"title":"param","description":"Each circle's stroke width.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Number"}},"name":"circleStrokeWidth","default":"1"}]},"componentDescription":"Generates an SVG radar chart.","modules":[]}