{"main":{"slug":"Labels.html.svelte","contents":"<!--\n  @component\n  Adds HTML text labels based on a given list.\n -->\n<script>\n  import { getContext } from 'svelte';\n\n  const { xGet, yGet } = getContext('LayerCake');\n\n  /** @type {Array<Object>} labels - An array of objects that contain a field containing text label and data fields. */\n  export let labels;\n\n  /** @type {Function} getLabelName= - An accessor function to return the label field on your objects in the `labels` array. */\n  export let getLabelName;\n\n  /** @type {Function} [formatLabelName=d => d] - An optional formatting function. */\n  export let formatLabelName = d => d;\n</script>\n\n{#each labels as d}\n  <div\n    class=\"label\"\n    style=\"\n      top:{$yGet(d)}px;\n      left:{$xGet(d)}px;\n    \"\n  >\n    {formatLabelName(getLabelName(d))}\n  </div>\n{/each}\n\n<style>\n  .label {\n    position: absolute;\n    transform: translate(-50%, -50%);\n    font-size: 12px;\n  }\n</style>"},"dek":"","usedIn":[{"group":"Regular","matches":["/example/MapLayered","/example/MultiLine"]},{"group":"SSR","matches":["/example-ssr/MapLayered","/example-ssr/MultiLine"]}],"hasjsDoctable":true,"jsdocParsed":{"description":"","tags":[{"title":"param","description":"An array of objects that contain a field containing text label and data fields.","type":{"type":"TypeApplication","expression":{"type":"NameExpression","name":"Array"},"applications":[{"type":"NameExpression","name":"Object"}]},"name":"labels"},{"title":"param","description":"= - An accessor function to return the label field on your objects in the `labels` array.","type":{"type":"NameExpression","name":"Function"},"name":"getLabelName"},{"title":"param","description":"An optional formatting function.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Function"}},"name":"formatLabelName","default":"d=>d"}]},"componentDescription":"Adds HTML text labels based on a given list.","modules":[]}