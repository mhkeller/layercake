{"main":{"slug":"BeeswarmForce.html.svelte","contents":"<!--\n  @component\n  Generates an HTML Beeswarm chart using a [d3-force simulation](https://github.com/d3/d3-force).\n -->\n<script>\n  import { getContext } from 'svelte';\n  import { forceSimulation, forceX, forceY, forceCollide } from 'd3-force';\n\n  const { data, xGet, height, zGet } = getContext('LayerCake');\n\n  const nodes = $data.map(d => ({ ...d }));\n\n  /** @type {Number} [r=4] - The circle radius size in pixels. */\n  export let r = 4;\n\n  /** @type {Number} [strokeWidth=0.5] - The circle's stroke width in pixels. */\n  export let strokeWidth = 0.5;\n\n  /** @type {String} [stroke='#fff'] - The circle's stroke color. */\n  export let stroke = '#fff';\n\n  /** @type {Number} [xStrength=0.95] - The value passed into the `.strength` method on `forceX`, which is used as the `'x'` property on the simulation. See [the documentation](https://github.com/d3/d3-force#x_strength) for more. */\n  export let xStrength = 0.95;\n\n  /** @type {Number} [yStrength=0.075] - The value passed into the `.strength` method on `forceY`, which is used as the `'y'` property on the simulation. See [the documentation](https://github.com/d3/d3-force#y_strength) for more. */\n  export let yStrength = 0.075;\n\n  /** @type {Function|undefined} [getTitle] — An accessor function to get the field on the data element to display as a hover label. Mostly useful for debugging, needs better styling for production. */\n  export let getTitle = undefined;\n\n  $: simulation = forceSimulation(nodes)\n    .force(\n      'x',\n      forceX()\n        .x(d => $xGet(d))\n        .strength(xStrength)\n    )\n    .force(\n      'y',\n      forceY()\n        .y($height / 2)\n        .strength(yStrength)\n    )\n    .force('collide', forceCollide(r + strokeWidth / 2))\n    .stop();\n\n  $: {\n    for (\n      let i = 0,\n        n = Math.ceil(Math.log(simulation.alphaMin()) / Math.log(1 - simulation.alphaDecay()));\n      i < n;\n      ++i\n    ) {\n      simulation.tick();\n    }\n  }\n</script>\n\n<div class=\"bee-group\">\n  {#each simulation.nodes() as node}\n    <div\n      class=\"bee\"\n      style=\"\n        left:{node.x}px;\n        top: {node.y}px;\n        width: {r * 2}px;\n        height: {r * 2}px;\n        background: {$zGet(node)};\n        border-width: {strokeWidth}px;\n        border-color: {stroke};\n        \"\n    >\n      {#if getTitle}\n        <div class=\"title\">{getTitle(node)}</div>\n      {/if}\n    </div>\n  {/each}\n</div>\n\n<style>\n  .bee {\n    position: absolute;\n    border-style: solid;\n    border-radius: 50%;\n    transform: translate(-50%, -50%);\n  }\n  .title {\n    display: none;\n    white-space: nowrap;\n    padding: 0 3px;\n    border-radius: 3px;\n    font-size: 12px;\n    pointer-events: none;\n    position: absolute;\n    top: -15px;\n    left: 5px;\n    z-index: 9999;\n  }\n  .bee:hover .title {\n    display: block;\n  }\n</style>"},"dek":"","usedIn":[{"group":"Regular","matches":[]},{"group":"SSR","matches":[]}],"hasjsDoctable":true,"jsdocParsed":{"description":"","tags":[{"title":"param","description":"The circle radius size in pixels.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Number"}},"name":"r","default":"4"},{"title":"param","description":"The circle's stroke width in pixels.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Number"}},"name":"strokeWidth","default":"0.5"},{"title":"param","description":"The circle's stroke color.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"String"}},"name":"stroke","default":"'#fff'"},{"title":"param","description":"The value passed into the `.strength` method on `forceX`, which is used as the `'x'` property on the simulation. See [the documentation](https://github.com/d3/d3-force#x_strength) for more.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Number"}},"name":"xStrength","default":"0.95"},{"title":"param","description":"The value passed into the `.strength` method on `forceY`, which is used as the `'y'` property on the simulation. See [the documentation](https://github.com/d3/d3-force#y_strength) for more.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Number"}},"name":"yStrength","default":"0.075"},{"title":"param","description":"— An accessor function to get the field on the data element to display as a hover label. Mostly useful for debugging, needs better styling for production.","type":{"type":"OptionalType","expression":{"type":"UnionType","elements":[{"type":"NameExpression","name":"Function"},{"type":"UndefinedLiteral"}]}},"name":"getTitle"}]},"componentDescription":"Generates an HTML Beeswarm chart using a [d3-force simulation](https://github.com/d3/d3-force).","modules":[]}