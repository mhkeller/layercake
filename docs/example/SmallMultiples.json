{"main":{"title":"+page.svelte","contents":"<script>\n  import { calcExtents, flatten } from 'layercake';\n\n  import SmallMultipleWrapper from './_components/SmallMultipleWrapper.svelte';\n\n  import dataSeries from './_data/pointSeries.js';\n\n  /* --------------------------------------------\n   * Grab the extents of the full dataset\n   */\n  const extentGetters = {\n    x: d => d.x,\n    y: d => d.y\n  };\n\n  const fullExtents = calcExtents(flatten(dataSeries), extentGetters);\n\n  /* --------------------------------------------\n   * Sort by the last value\n   */\n  dataSeries.sort((a, b) => {\n    return b[b.length - 1].y - a[a.length - 1].y;\n  });\n\n  let scale = 'individual';\n</script>\n\n<div class=\"input-container\">\n  <label><input type=\"radio\" bind:group={scale} value=\"individual\" />Individual scale</label>\n  <label><input type=\"radio\" bind:group={scale} value=\"shared\" />Shared scale</label>\n</div>\n\n<div class=\"group-container\">\n  {#each dataSeries as data}\n    <div class=\"small-multiple-container\">\n      <SmallMultipleWrapper {data} {fullExtents} {scale} {extentGetters} />\n    </div>\n  {/each}\n</div>\n\n<style>\n  .group-container {\n    height: calc(100% - 40px);\n    width: 100%;\n  }\n  .input-container {\n    margin-bottom: 7px;\n  }\n  label {\n    cursor: pointer;\n  }\n  input {\n    margin-right: 7px;\n  }\n  /*\n    The wrapper div needs to have an explicit width and height in CSS.\n    It can also be a flexbox child or CSS grid element.\n    The point being it needs dimensions since the <LayerCake> element will\n    expand to fill it.\n  */\n  .small-multiple-container {\n    position: relative;\n    display: inline-block;\n    width: 11%;\n    height: 30%;\n  }\n</style>"},"dek":"An example of how to do small multiples with the same rendering component. Because we want to calculate and store the extents for each series, we have to put the Layer Cake component in a wrapper component, called `ChartWrapper.svelte` below.\n","components":[{"title":"./_components/SmallMultipleWrapper.svelte","contents":"<script>\n  import { LayerCake, Svg, calcExtents } from 'layercake';\n  import { tweened } from 'svelte/motion';\n  import * as eases from 'svelte/easing';\n\n  import Line from './Line.svelte';\n\n  export let data;\n  export let fullExtents;\n  export let scale;\n  export let extentGetters;\n\n  const tweenOptions = {\n    duration: 300,\n    easing: eases.cubicInOut\n  };\n\n  const xDomain = tweened(undefined, tweenOptions);\n  const yDomain = tweened(undefined, tweenOptions);\n\n  const extents = calcExtents(data, extentGetters);\n\n  $: xDomain.set(scale === 'shared' ? fullExtents.x : extents.x);\n  $: yDomain.set(scale === 'shared' ? fullExtents.y : extents.y);\n</script>\n\n<LayerCake\n  padding={{ top: 2, right: 6, bottom: 2, left: 6 }}\n  x={extentGetters.x}\n  y={extentGetters.y}\n  {data}\n  xDomain={$xDomain}\n  yDomain={$yDomain}\n>\n  <Svg>\n    <Line stroke={'#000'} />\n  </Svg>\n</LayerCake>"}],"modules":[{"title":"./_data/pointSeries.js","contents":"export default [\n  [\n    { x: 0, y: 0.3513332305465124 },\n    { x: 1, y: -0.47850548294493284 },\n    { x: 2, y: -0.8631762284263558 },\n    { x: 3, y: -1.7484233826606137 },\n    { x: 4, y: -1.5706727472497415 },\n    { x: 5, y: -3.289713739464341 },\n    { x: 6, y: -3.9730820042995005 },\n    { x: 7, y: -2.745530296666686 },\n    { x: 8, y: -3.5791092007187646 },\n    { x: 9, y: -2.6641758464410152 }\n  ],\n  [\n    { x: 0, y: -2.1768831333979946 },\n    { x: 1, y: -3.9534632619125096 },\n    { x: 2, y: -3.899114148630141 },\n    { x: 3, y: -3.9827562738951876 },\n    { x: 4, y: -4.580294736167417 },\n    { x: 5, y: -3.856065008784584 },\n    { x: 6, y: -3.7484016156069195 },\n    { x: 7, y: -4.251249481201894 },\n    { x: 8, y: -4.469618989456487 },\n    { x: 9, y: -4.402688785575379 }\n  ],\n  [\n    { x: 0, y: 0.8587657948567446 },\n    { x: 1, y: 0.5079352772290244 },\n    { x: 2, y: 2.701251831225464 },\n    { x: 3, y: 5.837115995564179 },\n    { x: 4, y: 6.760908500285659 },\n    { x: 5, y: 6.0834936334060785 },\n    { x: 6, y: 7.320640580003705 },\n    { x: 7, y: 8.480047690829132 },\n    { x: 8, y: 9.105945107644933 },\n    { x: 9, y: 9.426539155610454 }\n  ],\n  [\n    { x: 0, y: 2.095248369393952 },\n    { x: 1, y: 1.765188669621648 },\n    { x: 2, y: 0.5467739943527758 },\n    { x: 3, y: -0.3507100722398887 },\n    { x: 4, y: 0.2983588210197782 },\n    { x: 5, y: 0.5105812148122781 },\n    { x: 6, y: 1.5437157564970827 },\n    { x: 7, y: 2.3653169559429537 },\n    { x: 8, y: 1.90924018284514 },\n    { x: 9, y: 2.1356513687796674 }\n  ],\n  [\n    { x: 0, y: 0.5488385729500312 },\n    { x: 1, y: 1.8670789082642192 },\n    { x: 2, y: 2.206540934969421 },\n    { x: 3, y: 3.055554299010695 },\n    { x: 4, y: 0.4967425647902308 },\n    { x: 5, y: 2.327901093516326 },\n    { x: 6, y: 0.8992924851467803 },\n    { x: 7, y: 1.8817986624215481 },\n    { x: 8, y: 2.3891551227372205 },\n    { x: 9, y: 1.133778319314648 }\n  ],\n  [\n    { x: 0, y: -0.3562898099723935 },\n    { x: 1, y: 0.20565872246731903 },\n    { x: 2, y: -0.1162117685820413 },\n    { x: 3, y: 0.8631383539123323 },\n    { x: 4, y: 3.2890516402408663 },\n    { x: 5, y: 3.0857377702871545 },\n    { x: 6, y: 1.0370651586546682 },\n    { x: 7, y: -1.0186438338583623 },\n    { x: 8, y: 0.14241054172118361 },\n    { x: 9, y: 0.8412068911584337 }\n  ],\n  [\n    { x: 0, y: -0.7654061779170572 },\n    { x: 1, y: -0.032595953968226454 },\n    { x: 2, y: 0.2678472728835137 },\n    { x: 3, y: 0.08563601239405039 },\n    { x: 4, y: -0.0013330703820842171 },\n    { x: 5, y: 1.4703345017728822 },\n    { x: 6, y: 1.3856274424774901 },\n    { x: 7, y: -0.20599108956133416 },\n    { x: 8, y: -0.7751447950252981 },\n    { x: 9, y: 0.47169212501954916 }\n  ],\n  [\n    { x: 0, y: -1.1732177326141833 },\n    { x: 1, y: -2.7527274224702065 },\n    { x: 2, y: -2.2211792447108714 },\n    { x: 3, y: -1.017590856110545 },\n    { x: 4, y: 0.6779112439466795 },\n    { x: 5, y: 0.270071953934581 },\n    { x: 6, y: -0.6558848145557117 },\n    { x: 7, y: -0.057309434562747286 },\n    { x: 8, y: -0.7458264810903046 },\n    { x: 9, y: 0.5001744113836739 }\n  ],\n  [\n    { x: 0, y: -0.546732244433788 },\n    { x: 1, y: -0.07416764769549289 },\n    { x: 2, y: -1.6595417109999924 },\n    { x: 3, y: -3.171184337736065 },\n    { x: 4, y: -2.7367845673789564 },\n    { x: 5, y: -2.4028017878731487 },\n    { x: 6, y: -3.3855251261635013 },\n    { x: 7, y: -3.914712672393975 },\n    { x: 8, y: -3.0652727151850634 },\n    { x: 9, y: -4.3807147718164945 }\n  ],\n  [\n    { x: 0, y: 0.5002117874054588 },\n    { x: 1, y: -1.3975943832928739 },\n    { x: 2, y: -2.547911521154404 },\n    { x: 3, y: -1.5969200501057434 },\n    { x: 4, y: -1.1764040680662173 },\n    { x: 5, y: -1.492868534196866 },\n    { x: 6, y: -1.8865830283320832 },\n    { x: 7, y: -1.3073578086443587 },\n    { x: 8, y: 0.12280679226177948 },\n    { x: 9, y: -2.4386679354191343 }\n  ],\n  [\n    { x: 0, y: -0.8135433681734914 },\n    { x: 1, y: -1.221075788028858 },\n    { x: 2, y: -0.2744306894025812 },\n    { x: 3, y: 0.7083803705971968 },\n    { x: 4, y: -0.30123497298530666 },\n    { x: 5, y: -0.12098193043768593 },\n    { x: 6, y: 0.7779616569301503 },\n    { x: 7, y: 0.24278467122340208 },\n    { x: 8, y: 2.12035553113487 },\n    { x: 9, y: 1.5777631433830899 }\n  ],\n  [\n    { x: 0, y: -1.2807077385033618 },\n    { x: 1, y: -1.60918596863346 },\n    { x: 2, y: -1.1252711445818604 },\n    { x: 3, y: 0.1123443278338252 },\n    { x: 4, y: 0.6765953813677427 },\n    { x: 5, y: -0.24953981170929884 },\n    { x: 6, y: -0.7245587949132168 },\n    { x: 7, y: -0.1322418860127922 },\n    { x: 8, y: -2.0267241146650887 },\n    { x: 9, y: -2.203025286852793 }\n  ],\n  [\n    { x: 0, y: -0.5646593880324497 },\n    { x: 1, y: 0.019675233652433954 },\n    { x: 2, y: 1.1125492696390593 },\n    { x: 3, y: -0.21768925566531694 },\n    { x: 4, y: -0.43002048847289853 },\n    { x: 5, y: 0.1472531927930274 },\n    { x: 6, y: 0.9536777882928407 },\n    { x: 7, y: 1.7662231600360088 },\n    { x: 8, y: 2.3107906857269036 },\n    { x: 9, y: 0.03169262048875865 }\n  ],\n  [\n    { x: 0, y: -1.4703405378184384 },\n    { x: 1, y: -3.6660782113882835 },\n    { x: 2, y: -2.1234430449995942 },\n    { x: 3, y: -0.31491835255274725 },\n    { x: 4, y: 0.2519911763297693 },\n    { x: 5, y: -0.7593130835875026 },\n    { x: 6, y: 0.27946963886864307 },\n    { x: 7, y: -0.38601550782775373 },\n    { x: 8, y: -1.7086440970313155 },\n    { x: 9, y: -2.2184975489863223 }\n  ],\n  [\n    { x: 0, y: 1.075613382572133 },\n    { x: 1, y: 1.5858773914182227 },\n    { x: 2, y: 0.8770573429185515 },\n    { x: 3, y: 1.2917422132464667 },\n    { x: 4, y: 0.9866084663257535 },\n    { x: 5, y: 1.1136430669870276 },\n    { x: 6, y: 2.5087234218660477 },\n    { x: 7, y: 3.897378190589307 },\n    { x: 8, y: 3.4944058027154106 },\n    { x: 9, y: 3.3350669636577703 }\n  ],\n  [\n    { x: 0, y: -0.769481078391433 },\n    { x: 1, y: -1.7663885001671653 },\n    { x: 2, y: -3.700748337973364 },\n    { x: 3, y: -2.90481913516788 },\n    { x: 4, y: -4.653428298468029 },\n    { x: 5, y: -5.690638211312513 },\n    { x: 6, y: -3.762776837320062 },\n    { x: 7, y: -4.125948059447033 },\n    { x: 8, y: -6.369088532937904 },\n    { x: 9, y: -6.130469306897179 }\n  ],\n  [\n    { x: 0, y: -0.6060612391774423 },\n    { x: 1, y: -0.1661630609170786 },\n    { x: 2, y: -0.8301060910250655 },\n    { x: 3, y: -0.7516298932551538 },\n    { x: 4, y: 0.06309968596601889 },\n    { x: 5, y: 0.23024684564640405 },\n    { x: 6, y: -0.3769683028829788 },\n    { x: 7, y: -0.8912667423333008 },\n    { x: 8, y: -1.2396819684201017 },\n    { x: 9, y: -0.38895690194817045 }\n  ],\n  [\n    { x: 0, y: -0.9114218426959718 },\n    { x: 1, y: -0.060301791732889076 },\n    { x: 2, y: -0.9270741950807107 },\n    { x: 3, y: -2.0675258449919967 },\n    { x: 4, y: -0.08373718479615966 },\n    { x: 5, y: -0.742766389679131 },\n    { x: 6, y: -0.3113686704234539 },\n    { x: 7, y: 1.3283998112889834 },\n    { x: 8, y: 1.7758763727813693 },\n    { x: 9, y: 3.81386918977139 }\n  ],\n  [\n    { x: 0, y: 1.7176790534482675 },\n    { x: 1, y: 2.0432025798611404 },\n    { x: 2, y: 3.6581604675933796 },\n    { x: 3, y: 2.940918317727456 },\n    { x: 4, y: 1.7185613645563316 },\n    { x: 5, y: 1.7819340726171955 },\n    { x: 6, y: 0.6507861853791468 },\n    { x: 7, y: 2.5951771651052367 },\n    { x: 8, y: 3.519960937767535 },\n    { x: 9, y: 3.197786396503866 }\n  ],\n  [\n    { x: 0, y: -0.3038191596502425 },\n    { x: 1, y: -1.3685608331479382 },\n    { x: 2, y: 0.5634023938007005 },\n    { x: 3, y: 0.7985300339161426 },\n    { x: 4, y: 0.015410817527624188 },\n    { x: 5, y: 0.9718003621065988 },\n    { x: 6, y: 1.2175926771772418 },\n    { x: 7, y: -0.45971510207922317 },\n    { x: 8, y: -1.7925772720518218 },\n    { x: 9, y: -2.797757779872802 }\n  ],\n  [\n    { x: 0, y: 0.8863594890626845 },\n    { x: 1, y: 0.4805543692922663 },\n    { x: 2, y: -0.21233113644620377 },\n    { x: 3, y: -0.5651934422185125 },\n    { x: 4, y: 0.6977913923481813 },\n    { x: 5, y: 1.9747582290228265 },\n    { x: 6, y: 0.9058940775608975 },\n    { x: 7, y: 2.164448517902702 },\n    { x: 8, y: 1.200779603279385 },\n    { x: 9, y: 0.27011411254519535 }\n  ],\n  [\n    { x: 0, y: 0.8102833184946229 },\n    { x: 1, y: 1.4974853704340667 },\n    { x: 2, y: -0.2511326270639147 },\n    { x: 3, y: -1.4887219856377514 },\n    { x: 4, y: -2.054165795834861 },\n    { x: 5, y: -0.7110079453402081 },\n    { x: 6, y: 1.2224455696568188 },\n    { x: 7, y: 0.10576404901318259 },\n    { x: 8, y: -0.5577986193258884 },\n    { x: 9, y: -0.8307701610339031 }\n  ],\n  [\n    { x: 0, y: -0.754339359890586 },\n    { x: 1, y: -0.28422901710237364 },\n    { x: 2, y: 0.4575829777241672 },\n    { x: 3, y: 0.6214246890384195 },\n    { x: 4, y: 1.1950848608542208 },\n    { x: 5, y: 0.12829030929988217 },\n    { x: 6, y: 0.9916165486492478 },\n    { x: 7, y: 0.07713732189769096 },\n    { x: 8, y: 1.3185227211734212 },\n    { x: 9, y: 1.3790849065109583 }\n  ],\n  [\n    { x: 0, y: -1.0383242310768992 },\n    { x: 1, y: -0.36189660554379044 },\n    { x: 2, y: 1.7026078322176184 },\n    { x: 3, y: 2.4581042624776677 },\n    { x: 4, y: 1.2587470748265426 },\n    { x: 5, y: 0.17311307445802093 },\n    { x: 6, y: -0.2972726991489642 },\n    { x: 7, y: -1.0284350477870043 },\n    { x: 8, y: -0.4409267468949597 },\n    { x: 9, y: -1.721194506127408 }\n  ],\n  [\n    { x: 0, y: 0.9497890648486154 },\n    { x: 1, y: -0.7840480109209655 },\n    { x: 2, y: -3.0537174943564764 },\n    { x: 3, y: -4.003323211985304 },\n    { x: 4, y: -3.650725391139404 },\n    { x: 5, y: -5.195623583848551 },\n    { x: 6, y: -6.579180832109046 },\n    { x: 7, y: -6.410177263118323 },\n    { x: 8, y: -7.023259052330267 },\n    { x: 9, y: -6.216863081739327 }\n  ],\n  [\n    { x: 0, y: -0.4428908643957123 },\n    { x: 1, y: -0.8778820735472277 },\n    { x: 2, y: -0.1642563408395692 },\n    { x: 3, y: -0.22904137849126743 },\n    { x: 4, y: 0.48944499719915696 },\n    { x: 5, y: 1.813325690012508 },\n    { x: 6, y: 2.354462578631868 },\n    { x: 7, y: 2.8557880465926715 },\n    { x: 8, y: 3.6456850324758125 },\n    { x: 9, y: 4.145717439210561 }\n  ],\n  [\n    { x: 0, y: 0.13059426813587155 },\n    { x: 1, y: 0.3755092236260167 },\n    { x: 2, y: 1.8320734188682832 },\n    { x: 3, y: 1.7688926504783191 },\n    { x: 4, y: 2.7160551052985875 },\n    { x: 5, y: 3.5367959655320327 },\n    { x: 6, y: 4.489059997755517 },\n    { x: 7, y: 3.4576184763756963 },\n    { x: 8, y: 2.629075492886139 },\n    { x: 9, y: 1.9224087765098758 }\n  ]\n];"}],"componentModules":[],"componentComponents":[{"title":"./_components/Line.svelte","contents":"<!--\n  @component\n  Generates an SVG line shape.\n -->\n<script>\n  import { getContext } from 'svelte';\n\n  const { data, xGet, yGet } = getContext('LayerCake');\n\n  /** @type {String} [stroke='#ab00d6'] - The shape's fill color. This is technically optional because it comes with a default value but you'll likely want to replace it with your own color. */\n  export let stroke = '#ab00d6';\n\n  $: path =\n    'M' +\n    $data\n      .map(d => {\n        return $xGet(d) + ',' + $yGet(d);\n      })\n      .join('L');\n</script>\n\n<path class=\"path-line\" d={path} {stroke}></path>\n\n<style>\n  .path-line {\n    fill: none;\n    stroke-linejoin: round;\n    stroke-linecap: round;\n    stroke-width: 2;\n  }\n</style>"}],"csvs":[],"jsons":[]}