{"main":{"slug":"MapPoints.svelte","contents":"<!--\n  @component\n  Generates canvas dots onto a map using [d3-geo](https://github.com/d3/d3-geo).\n -->\n<script>\n  /** @type {Function} projection - A D3 projection function. Pass this in as an uncalled function, e.g. `projection={geoAlbersUsa}`. */\n  import { getContext } from 'svelte';\n\n  const { data, width, height } = getContext('LayerCake');\n\n  /* --------------------------------------------\n   * Require a D3 projection function\n   */\n  export let projection;\n\n  /** @type {Number} [r=3.5] - The point's radius. */\n  export let r = 3.5;\n\n  /** @type {String} [fill='yellow'] - The point's fill color. */\n  export let fill = 'yellow';\n\n  /** @type {String} [stroke='#000'] - The point's stroke color. */\n  export let stroke = '#000';\n\n  /** @type {Number} [strokeWidth=1] - The point's stroke width. */\n  export let strokeWidth = 1;\n\n  /** @type {Number} [opacity=1] - The point's opacity. */\n  export let opacity = 1;\n\n  /** @type {Array<Object>|undefined} [features] - A list of GeoJSON features to plot. If unset, the plotted features will defaults to those in `$data.features`, assuming this field a list of GeoJSON features. */\n  export let features = undefined;\n\n  $: projectionFn = projection().fitSize([$width, $height], $data);\n</script>\n\n<g class=\"points\">\n  {#each features || $data.features as d}\n    <!-- To scale the circle by size, set r to `$rGet(d.properties)` -->\n    <circle\n      cx={projectionFn(d.geometry.coordinates)[0]}\n      cy={projectionFn(d.geometry.coordinates)[1]}\n      {r}\n      {fill}\n      {stroke}\n      stroke-width={strokeWidth}\n      {opacity}\n    />\n  {/each}\n</g>"},"dek":"","usedIn":[{"group":"Regular","matches":[]},{"group":"SSR","matches":[]}],"hasjsDoctable":true,"jsdocParsed":{"description":"","tags":[{"title":"param","description":"A D3 projection function. Pass this in as an uncalled function, e.g. `projection={geoAlbersUsa}`.","type":{"type":"NameExpression","name":"Function"},"name":"projection"},{"title":"param","description":"The point's radius.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Number"}},"name":"r","default":"3.5"},{"title":"param","description":"The point's fill color.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"String"}},"name":"fill","default":"'yellow'"},{"title":"param","description":"The point's stroke color.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"String"}},"name":"stroke","default":"'#000'"},{"title":"param","description":"The point's stroke width.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Number"}},"name":"strokeWidth","default":"1"},{"title":"param","description":"The point's opacity.","type":{"type":"OptionalType","expression":{"type":"NameExpression","name":"Number"}},"name":"opacity","default":"1"},{"title":"param","description":"A list of GeoJSON features to plot. If unset, the plotted features will defaults to those in `$data.features`, assuming this field a list of GeoJSON features.","type":{"type":"OptionalType","expression":{"type":"UnionType","elements":[{"type":"TypeApplication","expression":{"type":"NameExpression","name":"Array"},"applications":[{"type":"NameExpression","name":"Object"}]},{"type":"UndefinedLiteral"}]}},"name":"features"}]},"componentDescription":"Generates canvas dots onto a map using [d3-geo](https://github.com/d3/d3-geo).","modules":[]}